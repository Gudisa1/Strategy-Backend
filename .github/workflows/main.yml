name: CI/CD Docker Deploy

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build Django image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/strategybackend-web:latest -f Dockerfile .

      - name: Build NGINX image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/strategybackend-nginx:latest -f ./nginx/Dockerfile ./nginx

      - name: Push images to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/strategybackend-web:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/strategybackend-nginx:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Install SSH
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            cd ~/strategybackend &&
            export SECRET_KEY='${{ secrets.SECRET_KEY }}' &&
            export DEBUG='${{ secrets.DEBUG }}' &&
            export POSTGRES_DB='${{ secrets.POSTGRES_DB }}' &&
            export POSTGRES_USER='${{ secrets.POSTGRES_USER }}' &&
            export POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' &&
            export DB_HOST='${{ secrets.DB_HOST }}' &&
            export DB_PORT='${{ secrets.DB_PORT }}' &&
            export ALLOWED_HOSTS='${{ secrets.ALLOWED_HOSTS }}' &&
            docker compose -f docker-compose.prod.yml pull &&
            docker compose -f docker-compose.prod.yml up -d
          "
